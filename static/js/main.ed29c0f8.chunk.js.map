{"version":3,"sources":["assets/rocket-loader.svg","pages/homepage/homepage.jsx","assets/link-icon.svg","assets/heart-full-icon.svg","assets/heart-empty-icon.svg","components/spacestagram-card/spacestagram-card.jsx","components/loader/loader.jsx","components/scroll-button/scroll-button.jsx","pages/spacestagram-view/spacestagram-view.jsx","app/App.jsx","reportWebVitals.js","index.js"],"names":["HomePage","openSpacestagram","useState","animateShip","setAnimateShip","className","height","src","RocketIcon","alt","Button","onClick","SpacestagramCard","imageData","onPostInteractionHandler","likedState","setLikedState","useEffect","imgLikedState","window","localStorage","getItem","identifier","Card","Body","url","zoomSrc","zoomType","zoomScale","width","removeItem","setItem","variant","LikedIcon","UnlikedIcon","Dropdown","Toggle","Menu","Item","e","navigator","clipboard","writeText","LinkIcon","Text","caption","date","split","LoadingMessages","Loader","showMsg","randMsg","Math","floor","random","length","LoadingIcon","ScrollButton","visible","setVisible","addEventListener","pageYOffset","scrollTo","top","behaviour","SpacestagramView","imgMetaData","setMetaImgData","hasLoaded","setHasLoaded","isLoadingMore","setIsLoadingMore","toastMsgs","setToastMsgs","daysAgoToLoad","setDaysAgoToLoad","getEPICImgMetaData","ceil","innerHeight","document","documentElement","scrollTop","offsetHeight","setTimeout","slice","a","tempDate","Date","setDate","getDate","queryDate","String","toISOString","axios","method","process","then","response","setImgsArr","data","catch","error","console","log","imageArr","newImgArr","map","imgData","splitDate","year","month","day","imgUrl","image","state","message","img","ToastContainer","style","position","bottom","right","toastMsg","idx","Toast","Header","App","displayHomepage","setDisplayHomepage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ed29c0f8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/rocket-loader.e26e31f3.svg\";","import React, { useState } from 'react';\nimport RocketIcon from \"../../assets/rocket-loader.svg\"\nimport { Button } from 'react-bootstrap'\n\nimport \"./homepage.scss\";\n\nconst HomePage = ({openSpacestagram}) => {\n    const [animateShip, setAnimateShip] = useState(\"\")\n\n    return (\n        <div className=\"homepage-wrapper\">\n            <div className=\"homepage-header\">\n                <h1 className={animateShip ? \"fadeout-animation\" : \"\"}>SPACESTAGRAM</h1>\n                <img height=\"60\" src={RocketIcon} alt=\"spacestagram main logo\" className={animateShip}/>\n            </div>\n            <Button aria-label=\"Open spacestagram\" className={animateShip ? \"fadeout-animation\" : \"\"} onClick={() => {\n                setAnimateShip(\"animate-mode\")\n                openSpacestagram()}}>Begin your journey</Button>\n        </div>\n        \n    )\n}\n\nexport default HomePage;","export default __webpack_public_path__ + \"static/media/link-icon.8d570e79.svg\";","export default __webpack_public_path__ + \"static/media/heart-full-icon.65b6419a.svg\";","export default __webpack_public_path__ + \"static/media/heart-empty-icon.35384cfe.svg\";","import React, { useState, useEffect } from 'react'\nimport { Button, Card, Dropdown } from 'react-bootstrap'\nimport InnerImageZoom from 'react-inner-image-zoom';\n\n// Icons\nimport LinkIcon from \"../../assets/link-icon.svg\"\nimport LikedIcon from \"../../assets/heart-full-icon.svg\"\nimport UnlikedIcon from \"../../assets/heart-empty-icon.svg\"\n\nimport \"./spacestagram-card.scss\"\nimport 'react-inner-image-zoom/lib/InnerImageZoom/styles.css';\n\n\nconst SpacestagramCard = ({imageData, onPostInteractionHandler}) => {\n    const [likedState, setLikedState] = useState(false)\n\n    // Load liked images from localStorage\n    useEffect(() => {\n        const imgLikedState = window.localStorage.getItem(`${imageData.identifier}-liked-state`)\n\n        if (imgLikedState != null) {\n            if (imgLikedState == \"true\") {\n                setLikedState(true)\n            }\n        }\n    }, [])\n\n    // onClick handler for likes (Only stores liked images)\n    const handleLike = () => {\n        if (!likedState) {\n            window.localStorage.setItem(`${imageData.identifier}-liked-state`, !likedState)\n            onPostInteractionHandler(\"Liked post\")\n        }\n        else {\n            window.localStorage.removeItem(`${imageData.identifier}-liked-state`)\n            onPostInteractionHandler(\"Unliked post\")\n        }\n        setLikedState(!likedState)\n    }\n\n    // Save image link to clipboard\n    const copyToClipboard = (e) => {\n        onPostInteractionHandler(\"Link copied to clipboard\")\n        navigator.clipboard.writeText(`${imageData.url}`)\n    }\n\n    return (\n        <div className=\"spacestagram-card-wrapper\">\n            <Card>\n                <Card.Body>\n                <InnerImageZoom \n                    src={imageData.url} \n                    zoomSrc={imageData.url} \n                    alt=\"Photo of Earth taken by NASA's EPIC camera\"\n                    zoomType=\"hover\"\n                    zoomScale={1.25}\n                    width={566}\n                    height={566}\n                    />\n                <div className=\"interactions-row\">\n                    <Button aria-label=\"Like button\" onClick={handleLike} variant=\"none\" className=\"like-btn\">\n                        {\n                            likedState == true ? \n                            (<img alt=\"Liked post icon\"src={LikedIcon}/>) \n                            : \n                            (<img alt=\"Unliked post icon\" src={UnlikedIcon}/>)\n                        }\n                        \n                    </Button>\n                    <Dropdown>\n                        <Dropdown.Toggle variant=\"none\" aria-label=\"Share button\" className=\"share-btn\">\n                            <img width=\"32\" alt=\"Ei-share-apple\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c8/Ei-share-apple.svg/512px-Ei-share-apple.svg.png\"></img>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            <Dropdown.Item aria-label=\"Copy link\" onClick={copyToClipboard}>\n                                <div className=\"share-dropdown-content\">\n                                    <div>\n                                        <img width=\"16\" alt=\"Link icon\" src={LinkIcon}/>\n                                        Copy link to Image\n                                    </div>\n                                </div>\n                            </Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </div>\n                \n\n                <Card.Text className=\"caption\">\n                    {imageData.caption}\n                </Card.Text>\n                <Card.Text className=\"date\">\n                    {imageData.date.split(' ')[0]}\n                </Card.Text>\n                \n                </Card.Body>\n            </Card>\n        </div>\n    )\n}\n\nexport default SpacestagramCard;","import React from 'react';\nimport LoadingIcon from '../../assets/rocket-loader.svg'\nimport './loader.scss';\n\nconst LoadingMessages = [\n    \"Scouring space for images\",\n    \"Asking NOAA DSCOVR to send images\",\n    \"Exploring the universe for images\",\n    \"Kindly asking NASA for images\"\n]\n\nconst Loader = ({showMsg = true}) => {\n    const randMsg = LoadingMessages[Math.floor(Math.random() * LoadingMessages.length)]\n\n    return (\n        <div className={\"loading-wrapper\" + (showMsg ? \"\" : \" lazy-load\")}>\n            <img className=\"loader\" src={LoadingIcon} height=\"100\" alt=\"Loading Icon\" />\n            <h4>{showMsg ? randMsg : \"\"}</h4>\n        </div>\n    )\n}\n\nexport default Loader","import React, { useState, useEffect } from 'react'\nimport './scroll-button.scss'\nimport { Button } from 'react-bootstrap'\n\nconst ScrollButton = () => {\n    const [visible, setVisible] = useState(false)\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", () => {\n            if (window.pageYOffset > 500) {\n              setVisible(true);\n            } else {\n              setVisible(false);\n            }\n          });\n    }, [])\n\n    const scrollToTop = () => {\n        window.scrollTo({top:0, behaviour:\"smooth\"})\n    }\n\n    return (\n        <div className=\"scroll-button-wrapper\">\n            <Button aria-label=\"Scroll to top\" className={\"scroll-button\" + (visible ? \" show\" : \"\")} onClick={scrollToTop}>^</Button>\n        </div>\n    )\n}\n\nexport default ScrollButton;","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\n// Components\nimport SpacestagramCard from '../../components/spacestagram-card/spacestagram-card';\nimport Loader from '../../components/loader/loader';\nimport { Toast, ToastContainer } from \"react-bootstrap\"\nimport ScrollButton from '../../components/scroll-button/scroll-button';\n\n// Assets + Styling\nimport RocketIcon from \"../../assets/rocket-loader.svg\"\nimport \"./spacestagram-view.scss\"\n\nconst SpacestagramView = () => {\n    const [imgMetaData, setMetaImgData] = useState([])\n    const [hasLoaded, setHasLoaded] = useState(false)               // Loading state for initial batch of images\n    const [isLoadingMore, setIsLoadingMore] = useState(false)       // Loading state for lazy loading images\n    const [toastMsgs, setToastMsgs] = useState([])\n    const [daysAgoToLoad, setDaysAgoToLoad] = useState(2)\n\n    // Initial data load\n    useEffect(() => {    \n        getEPICImgMetaData()\n        \n        // Add scroll event listener to trigger lazy loading for images from older dates\n        window.addEventListener('scroll', () => {\n            if (Math.ceil(window.innerHeight + document.documentElement.scrollTop) !== document.documentElement.offsetHeight ||isLoadingMore)\n                return;\n            setIsLoadingMore(true);\n        })\n    }, [])\n\n    // Auto remove toast messages after 3 seconds\n    useEffect(() => {\n        if (toastMsgs.length > 0) {\n            window.setTimeout(() => {\n                setToastMsgs(toastMsgs => (toastMsgs.slice(1)))\n            }, 3000)\n        }\n    }, [toastMsgs])\n\n    // Load more upon scrolling down \n    useEffect(() => {\n        if (isLoadingMore) {\n            getEPICImgMetaData()\n        }\n    }, [isLoadingMore])\n\n    // Makes request to NASA API\n    const getEPICImgMetaData = async () => {\n        let tempDate = new Date()\n        tempDate.setDate(tempDate.getDate() - daysAgoToLoad)\n        let queryDate = String(tempDate.toISOString().slice(0, 10))\n\n        await axios({\n            method: 'get',\n            url: `https://api.nasa.gov/EPIC/api/natural/date/${queryDate}?api_key=${process.env.REACT_APP_NASA_KEY}`,\n        })\n        .then((response) => {\n            setImgsArr(response.data)\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    // Creates array of images with src URLs\n    const setImgsArr = (imageArr) => {\n        let newImgArr = imageArr.map((imgData) => {\n            let splitDate = imgData.date.split(' ')[0].split('-')\n            let year = splitDate[0]\n            let month = splitDate[1]\n            let day = splitDate[2]\n\n            let imgUrl = `https://epic.gsfc.nasa.gov/archive/natural/${year}/${month}/${day}/jpg/${imgData.image}.jpg`\n\n            imgData[\"url\"] = imgUrl\n            return imgData\n        })\n        setMetaImgData(state => [...state, ...newImgArr])\n        setHasLoaded(true)                                      // Initial load state\n        setDaysAgoToLoad(daysAgoToLoad + 1)                     // Increase gap in days\n        setIsLoadingMore(false)                                 // Lazy loading is set to false\n    }\n\n    // Update the toasts array with the messages\n    const onPostInteractionHandler = (message) => {\n        setToastMsgs([...toastMsgs, message])\n    }\n\n    return (\n        <div className=\"spacestagram-view-wrapper\">\n            {\n                hasLoaded && imgMetaData ? (\n                    <>\n                    <div className=\"spacestagram-header\">\n                        <h1>SPACESTAGRAM</h1>\n                        <img height=\"60\" src={RocketIcon} alt=\"spacestagram main logo\"/>\n                    </div>\n                    <div className=\"spacestagram-cards-holder\">\n\n                    \n                        {imgMetaData.map((img) => {\n                            return (\n                                <SpacestagramCard onPostInteractionHandler={onPostInteractionHandler} key={img.identifier} imageData={img}/>\n                            )\n                        })}\n                    </div>\n                    </>\n                )\n                :\n                <Loader/>\n            }\n            {\n                isLoadingMore ? \n                    <Loader showMsg={false}/>\n                    :\n                    <></>\n            }\n            <ToastContainer style={{position:\"fixed\", bottom:\"36px\", right:\"108px\"}}>\n                {\n                    toastMsgs && toastMsgs.map((toastMsg, idx) => {\n                        return (\n                            <Toast key={idx}>\n                                <Toast.Header>\n                                    <strong className=\"me-auto\">{toastMsg}</strong>\n                                </Toast.Header>\n                            </Toast>\n                        )\n                    })\n                }\n            </ToastContainer>\n            <ScrollButton/>\n        </div>\n    )\n}\n\nexport default SpacestagramView;","import HomePage from \"../pages/homepage/homepage.jsx\"\nimport SpacestagramView from \"../pages/spacestagram-view/spacestagram-view\";\nimport { useState } from 'react'\n\nimport \"./App.scss\"\n\nconst App = () => {\n  const [displayHomepage, setDisplayHomepage] = useState(true)\n\n  const openSpacestagram = () => {\n    window.setTimeout(() => {\n      setDisplayHomepage(false)\n    }, 1000)\n  }\n\n  return (\n    <div className=\"app-wrapper\">\n      <header className=\"app-header\">\n        {displayHomepage ? \n        (<HomePage openSpacestagram={openSpacestagram}/>) \n        :\n        (<SpacestagramView/>)\n        }\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App.jsx';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootswatch/dist/lux/bootstrap.min.css'; \n//import 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}