{"version":3,"sources":["assets/rocket-loader.svg","pages/homepage/homepage.jsx","assets/link-icon.svg","assets/heart-full-icon.svg","assets/heart-empty-icon.svg","components/spacestagram-card/spacestagram-card.jsx","components/loader/loader.jsx","assets/arrow-up-icon.svg","components/scroll-button/scroll-button.jsx","pages/spacestagram-view/spacestagram-view.jsx","app/App.jsx","reportWebVitals.js","index.js"],"names":["HomePage","openSpacestagram","useState","animateShip","setAnimateShip","className","height","width","src","RocketIcon","alt","Button","onClick","SpacestagramCard","imageData","onPostInteractionHandler","likedState","setLikedState","useEffect","imgLikedState","JSON","parse","window","localStorage","getItem","find","post","identifier","liked","Card","Body","url","zoomSrc","zoomType","zoomScale","allLikedPosts","filter","setItem","stringify","push","variant","LikedIcon","UnlikedIcon","Dropdown","Toggle","Menu","Item","e","navigator","clipboard","writeText","LinkIcon","Text","caption","date","split","LoadingMessages","Loader","showMsg","randMsg","Math","floor","random","length","LoadingIcon","scrollToTop","scrollTo","top","behaviour","ScrollButton","visible","setVisible","addEventListener","pageYOffset","ScrollIcon","SpacestagramView","imgMetaData","setMetaImgData","hasLoaded","setHasLoaded","isLoadingMore","setIsLoadingMore","toastMsgs","setToastMsgs","daysAgoToLoad","setDaysAgoToLoad","getEPICImgMetaData","ceil","innerHeight","document","documentElement","scrollTop","offsetHeight","setTimeout","slice","a","tempDate","Date","setDate","getDate","queryDate","String","toISOString","axios","method","process","then","response","setImgsArr","data","catch","error","console","log","imageArr","newImgArr","map","imgData","splitDate","year","month","day","imgUrl","image","state","message","img","ToastContainer","toastMsg","idx","Toast","Header","App","displayHomepage","setDisplayHomepage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0f696296.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/rocket-loader.e26e31f3.svg\";","import React, { useState } from 'react';\nimport RocketIcon from \"../../assets/rocket-loader.svg\"\nimport { Button } from 'react-bootstrap'\n\nimport \"./homepage.scss\";\n\nconst HomePage = ({openSpacestagram}) => {\n    const [animateShip, setAnimateShip] = useState(\"\")\n\n    return (\n        <div className=\"homepage-wrapper\">\n            <div className=\"homepage-header\">\n                <h1 className={animateShip ? \"fadeout-animation\" : \"\"}>SPACESTAGRAM</h1>\n                <img height=\"60\" width=\"60\" src={RocketIcon} alt=\"spacestagram main logo\" className={animateShip}/>\n            </div>\n            <Button aria-label=\"Open spacestagram\" className={animateShip ? \"fadeout-animation\" : \"\"} onClick={() => {\n                setAnimateShip(\"animate-mode\")\n                openSpacestagram()}}>Begin your journey</Button>\n        </div>\n    )\n}\n\nexport default HomePage;","export default __webpack_public_path__ + \"static/media/link-icon.8d570e79.svg\";","export default __webpack_public_path__ + \"static/media/heart-full-icon.65b6419a.svg\";","export default __webpack_public_path__ + \"static/media/heart-empty-icon.35384cfe.svg\";","import React, { useState, useEffect } from 'react'\nimport { Button, Card, Dropdown } from 'react-bootstrap'\nimport InnerImageZoom from 'react-inner-image-zoom';\n\n// Icons\nimport LinkIcon from \"../../assets/link-icon.svg\"\nimport LikedIcon from \"../../assets/heart-full-icon.svg\"\nimport UnlikedIcon from \"../../assets/heart-empty-icon.svg\"\n\nimport \"./spacestagram-card.scss\"\nimport 'react-inner-image-zoom/lib/InnerImageZoom/styles.css';\n\n\nconst SpacestagramCard = ({imageData, onPostInteractionHandler}) => {\n    const [likedState, setLikedState] = useState(false)\n\n    // Load liked images from localStorage\n    useEffect(() => {\n        const allLikedPosts = JSON.parse(window.localStorage.getItem(\"likedPosts\"))\n        let imgLikedState = allLikedPosts.find(post => post.identifier == imageData.identifier)\n\n        if (imgLikedState && imgLikedState.liked == true) {\n            setLikedState(true)\n        }\n    }, [])\n\n    // onClick handler for likes (Only stores liked images)\n    const handleLike = () => {\n\n        // Liking an image (add to local storage arr)\n        if (!likedState) {\n            let allLikedPosts = JSON.parse(window.localStorage.getItem(\"likedPosts\"))\n            allLikedPosts.push({identifier: imageData.identifier, liked: !likedState})\n            window.localStorage.setItem(\"likedPosts\", JSON.stringify(allLikedPosts))\n            onPostInteractionHandler(\"Liked post\")\n        }\n\n        // Unliking an image (remove from local storage arr)\n        else {\n            let allLikedPosts = JSON.parse(window.localStorage.getItem(\"likedPosts\"))\n            allLikedPosts = allLikedPosts.filter(post => post.identifier != imageData.identifier)\n            window.localStorage.setItem(\"likedPosts\", JSON.stringify(allLikedPosts))\n            onPostInteractionHandler(\"Unliked post\")\n        }\n        setLikedState(!likedState)\n    }\n\n    // Save image link to clipboard\n    const copyToClipboard = (e) => {\n        onPostInteractionHandler(\"Link copied to clipboard\")\n        navigator.clipboard.writeText(`${imageData.url}`)\n    }\n\n    return (\n        <div className=\"spacestagram-card-wrapper\">\n            <Card>\n                <Card.Body>\n                    <InnerImageZoom \n                        src={imageData.url} \n                        zoomSrc={imageData.url} \n                        alt=\"Photo of Earth taken by NASA's EPIC camera\"\n                        zoomType=\"hover\"\n                        zoomScale={1.25}\n                        width={566}\n                        height={566}\n                    />\n                    <div className=\"interactions-row\">\n                        <Button aria-label=\"Like button\" onClick={handleLike} variant=\"none\" className=\"like-btn\">\n                            {\n                                likedState == true ? \n                                (<img alt=\"Liked post icon\"src={LikedIcon}/>) \n                                : \n                                (<img alt=\"Unliked post icon\" src={UnlikedIcon}/>)\n                            }  \n                        </Button>\n                        <Dropdown>\n                            <Dropdown.Toggle variant=\"none\" aria-label=\"Share button\" className=\"share-btn\">\n                                <img width=\"32\" alt=\"Ei-share-apple\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c8/Ei-share-apple.svg/512px-Ei-share-apple.svg.png\"></img>\n                            </Dropdown.Toggle>\n                            <Dropdown.Menu>\n                                <Dropdown.Item aria-label=\"Copy link\" onClick={copyToClipboard}>\n                                    <div className=\"share-dropdown-content\">\n                                        <div>\n                                            <img width=\"16\" alt=\"Link icon\" src={LinkIcon}/>\n                                            Copy link to Image\n                                        </div>\n                                    </div>\n                                </Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </div>\n                    <Card.Text className=\"caption\">\n                        {imageData.caption}\n                    </Card.Text>\n                    <Card.Text className=\"date\">\n                        {imageData.date.split(' ')[0]}\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        </div>\n    )\n}\n\nexport default SpacestagramCard;","import React from 'react';\nimport LoadingIcon from '../../assets/rocket-loader.svg'\nimport './loader.scss';\n\nconst LoadingMessages = [\n    \"Scouring space for images\",\n    \"Asking NOAA DSCOVR to send images\",\n    \"Exploring the universe for images\",\n    \"Kindly asking NASA for images\"\n]\n\nconst Loader = ({showMsg = true}) => {\n    const randMsg = LoadingMessages[Math.floor(Math.random() * LoadingMessages.length)]\n\n    return (\n        <div className={\"loading-wrapper\" + (showMsg ? \"\" : \" lazy-load\")}>\n            <img className=\"loader\" src={LoadingIcon} height=\"100\" alt=\"Loading Icon\" />\n            <h4>{showMsg ? randMsg : \"\"}</h4>\n        </div>\n    )\n}\n\nexport default Loader","export default __webpack_public_path__ + \"static/media/arrow-up-icon.eef88ed4.svg\";","import React, { useState, useEffect } from 'react'\nimport './scroll-button.scss'\nimport { Button } from 'react-bootstrap'\nimport ScrollIcon from '../../assets/arrow-up-icon.svg'\n\n\nconst scrollToTop = () => {\n  window.scrollTo({top:0, behaviour:\"smooth\"})\n}\n\nconst ScrollButton = () => {\n    const [visible, setVisible] = useState(false)\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", () => {\n            if (window.pageYOffset > 500) {\n              setVisible(true);\n            } else {\n              setVisible(false);\n            }\n          });\n    }, [])\n\n    return (\n        <div className=\"scroll-button-wrapper\">\n            <Button aria-label=\"Scroll to top\" className={\"scroll-button\" + (visible ? \" show\" : \"\")} onClick={scrollToTop}>\n              <img alt=\"Up arrow\" src={ScrollIcon}/>\n            </Button>\n        </div>\n    )\n}\n\nexport default ScrollButton;","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\n// Components\nimport SpacestagramCard from '../../components/spacestagram-card/spacestagram-card';\nimport Loader from '../../components/loader/loader';\nimport { Toast, ToastContainer } from \"react-bootstrap\"\nimport ScrollButton from '../../components/scroll-button/scroll-button';\n\n// Assets + Styling\nimport RocketIcon from \"../../assets/rocket-loader.svg\"\nimport \"./spacestagram-view.scss\"\n\nconst SpacestagramView = () => {\n    const [imgMetaData, setMetaImgData] = useState([])\n    const [hasLoaded, setHasLoaded] = useState(false)               // Loading state for initial batch of images\n    const [isLoadingMore, setIsLoadingMore] = useState(false)       // Loading state for lazy loading images\n    const [toastMsgs, setToastMsgs] = useState([])\n    const [daysAgoToLoad, setDaysAgoToLoad] = useState(2)           // State to control date to fetch data from\n\n    // Initial data load\n    useEffect(() => {\n        const curStoredLikes = JSON.parse(window.localStorage.getItem(\"likedPosts\"))    \n        if (!curStoredLikes) {\n            window.localStorage.setItem(\"likedPosts\", JSON.stringify([]))\n        }\n        \n        getEPICImgMetaData()\n        \n        // Add scroll event listener to trigger lazy loading for images from older dates\n        window.addEventListener('scroll', () => {\n            if (Math.ceil(window.innerHeight + document.documentElement.scrollTop) !== document.documentElement.offsetHeight ||isLoadingMore)\n                return;\n            setIsLoadingMore(true);\n        })\n    }, [])\n\n    // Auto remove toast messages after 3 seconds\n    useEffect(() => {\n        if (toastMsgs.length > 0) {\n            window.setTimeout(() => {\n                setToastMsgs(toastMsgs => (toastMsgs.slice(1)))\n            }, 50000000)\n        }\n    }, [toastMsgs])\n\n    // Load more upon scrolling down \n    useEffect(() => {\n        if (isLoadingMore) {\n            getEPICImgMetaData()\n        }\n    }, [isLoadingMore])\n\n    // Makes request to NASA API\n    const getEPICImgMetaData = async () => {\n        let tempDate = new Date()\n        tempDate.setDate(tempDate.getDate() - daysAgoToLoad)\n        let queryDate = String(tempDate.toISOString().slice(0, 10))\n\n        await axios({\n            method: 'get',\n            url: `https://api.nasa.gov/EPIC/api/natural/date/${queryDate}?api_key=${process.env.REACT_APP_NASA_KEY}`,\n        })\n        .then((response) => {\n            setImgsArr(response.data)\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    // Creates array of images with src URLs\n    const setImgsArr = (imageArr) => {\n        let newImgArr = imageArr.map((imgData) => {\n            let splitDate = imgData.date.split(' ')[0].split('-')\n            let year = splitDate[0]\n            let month = splitDate[1]\n            let day = splitDate[2]\n\n            let imgUrl = `https://epic.gsfc.nasa.gov/archive/natural/${year}/${month}/${day}/jpg/${imgData.image}.jpg`\n\n            imgData[\"url\"] = imgUrl\n            return imgData\n        })\n        setMetaImgData(state => [...state, ...newImgArr])\n        setHasLoaded(true)                                      // Initial load state\n        setDaysAgoToLoad(daysAgoToLoad + 1)                     // Increase gap in days\n        setIsLoadingMore(false)                                 // Lazy loading is set to false\n    }\n\n    // Update the toasts array with the messages\n    const onPostInteractionHandler = (message) => {\n        setToastMsgs([...toastMsgs, message])\n    }\n\n    return (\n        <div className=\"spacestagram-view-wrapper\">\n            {\n                hasLoaded && imgMetaData ? (\n                    <>\n                        <div className=\"spacestagram-header\" >\n                            <div className=\"spacestagram-header-content\" \n                                onClick={() => window.scrollTo({top:0, behaviour:\"smooth\"})}\n                            >\n                                <h1>SPACESTAGRAM</h1>\n                                <img height=\"60\" src={RocketIcon} alt=\"spacestagram main logo\"/>\n                            </div>\n                        </div>\n                        <div className=\"spacestagram-cards-holder\">\n                            {imgMetaData.map((img) => {\n                                return (\n                                    <SpacestagramCard onPostInteractionHandler={onPostInteractionHandler} key={img.identifier} imageData={img}/>\n                                )\n                            })}\n                        </div>\n                    </>\n                )\n                :\n                <Loader/>\n            }\n            {\n                isLoadingMore ? \n                    <Loader showMsg={false}/>\n                    :\n                    <></>\n            }\n            <ToastContainer>\n                {\n                    toastMsgs && toastMsgs.map((toastMsg, idx) => {\n                        return (\n                            <Toast key={idx}>\n                                <Toast.Header>\n                                    <strong className=\"me-auto\">{toastMsg}</strong>\n                                </Toast.Header>\n                            </Toast>\n                        )\n                    })\n                }\n            </ToastContainer>\n            <ScrollButton/>\n        </div>\n    )\n}\n\nexport default SpacestagramView;","import HomePage from \"../pages/homepage/homepage.jsx\"\nimport SpacestagramView from \"../pages/spacestagram-view/spacestagram-view\";\nimport { useState } from 'react'\n\nimport \"./App.scss\"\n\nconst App = () => {\n  const [displayHomepage, setDisplayHomepage] = useState(true)\n\n  const openSpacestagram = () => {\n    window.setTimeout(() => {\n      setDisplayHomepage(false)\n    }, 1000)\n  }\n\n  return (\n    <div className=\"app-wrapper\">\n      <header className=\"app-header\">\n        {displayHomepage ? \n        (<HomePage openSpacestagram={openSpacestagram}/>) \n        :\n        (<SpacestagramView/>)\n        }\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App.jsx';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootswatch/dist/lux/bootstrap.min.css'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}